# 1 ～ 100 までの 番号 が 書か れ た 100 枚 の カード が 順番 に 並べ られ て い ます。 最初、 すべて の カード は 裏返し の 状態 で 置か れ て い ます。 ある 人 が 2 番 の カード から、 1 枚 おき に カード を 裏返し て い
# n 番目 の カード から n－1 枚 おき に カード を 裏返す 操作 を、 どの カード の 向き も 変わら なく なる まで 続け た と し ます。
# カード の 向き が 変わら なく なっ た とき、 裏 向き に なっ て いる カード の 番号 を すべて 求め て ください。

# カードの向きが変わらない、とは何か？ => 100番目のカードを裏返したとき？
# 1 は絶対に裏のままである

# { カード番号: (表: true | 裏: false) }
cards = (1..100).map { |n| [n, false] }.to_h
(2..100).each do |n|
  (n..100).step(n).each do |j|
    cards[j] = !cards[j]
  end
end
puts cards.select { |_, v| !v }.keys

# 反省
# ハッシュじゃなくて、配列でよかった
# 約数を考えると、プログラム書かなくても解けるらしい
